apiVersion: apps/v1beta2
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '1'
    field.cattle.io/creatorId: user-vqwmp
  generation: 1
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-botcms-botcms-back
  name: botcms-back
  namespace: botcms
  selfLink: /apis/apps/v1beta2/namespaces/tcc/deployments/botcms-back
#  uid: 53f4b219-694b-11e9-9269-de1c3c6a503b
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-botcms-botcms-back
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        field.cattle.io/ports: '[[{"containerPort":3000,"dnsName":"botcms-back","kind":"ClusterIP","name":"3000tcp02","protocol":"TCP","sourcePort":0}]]'
      labels:
        workload.user.cattle.io/workloadselector: deployment-botcms-botcms-back
    spec:
      containers:
          image: ${CICD_IMAGE}:${CICD_EXECUTION_SEQUENCE}
          imagePullPolicy: Always
          name: botcms-back
          ports:
            - containerPort: 3000
              name: 3000tcp02
              protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            procMount: Default
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: registry-gitlab-com
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
